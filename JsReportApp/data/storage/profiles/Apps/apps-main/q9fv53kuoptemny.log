{"type":"operationStart","subtype":"profile","data":{"_id":"NFfEthYdb8Z4mLUy","timestamp":"2024-01-12T16:48:31.764Z","state":"queued","mode":"standard","creationDate":"2024-01-12T16:48:31.768Z","modificationDate":"2024-01-12T16:48:31.768Z","shortid":"xxu1Js9","$entitySet":"profiles"},"doDiffs":false,"timestamp":1705078111766,"id":"ovjwf5jmeqb40lr","previousOperationId":null,"operationId":"y4k046twgdw85a2"}
{"type":"log","level":"info","message":"Render request 5 queued for execution and waiting for available worker","previousOperationId":"y4k046twgdw85a2","timestamp":1705078111766,"id":"vd44ptko8x5sxyz"}
{"type":"operationStart","subtype":"render","name":"apps-main","previousOperationId":"y4k046twgdw85a2","timestamp":1705078111791,"id":"ks828joyx7x9f97","previousEventId":"ovjwf5jmeqb40lr","operationId":"fzu4fc5p00gqrrj"}
{"type":"log","timestamp":1705078111794,"level":"info","message":"Starting rendering request 5","meta":{"rootId":"q9fv53kuoptemny","id":"q9fv53kuoptemny"},"id":"zbw3a4pdxtxir9u","previousOperationId":"fzu4fc5p00gqrrj"}
{"type":"log","timestamp":1705078111796,"level":"info","message":"Rendering template { name: apps-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"q9fv53kuoptemny","id":"q9fv53kuoptemny"},"id":"vboh825i2ludk2e","previousOperationId":"fzu4fc5p00gqrrj"}
{"type":"log","timestamp":1705078111799,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"q9fv53kuoptemny","id":"q9fv53kuoptemny"},"id":"0ijzyy2ii2tbr1n","previousOperationId":"fzu4fc5p00gqrrj"}
{"type":"log","timestamp":1705078111805,"level":"debug","message":"Executing script apps-script (beforeRender)","meta":{"rootId":"q9fv53kuoptemny","id":"q9fv53kuoptemny"},"id":"ubknhujme33e69b","previousOperationId":"fzu4fc5p00gqrrj"}
{"type":"operationStart","subtype":"scriptsBeforeRender","name":"scripts beforeRender","timestamp":1705078112399,"id":"bxgh0rrst93kt04","previousEventId":"ks828joyx7x9f97","operationId":"h0oc1v1jdekxrz1","previousOperationId":"fzu4fc5p00gqrrj"}
{"type":"operationStart","subtype":"script","name":"scripts apps-script","previousOperationId":"h0oc1v1jdekxrz1","timestamp":1705078112399,"id":"gmmm2o6lxyfzghr","previousEventId":"bxgh0rrst93kt04","operationId":"whetrswcwd0wvzd"}
{"type":"log","timestamp":1705078112437,"level":"warn","message":"Error when processing render request 5\n(because) error when evaluating custom script /Apps/apps-script\nconnect ECONNREFUSED ::1:8000\nError: connect ECONNREFUSED ::1:8000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1555:16)","meta":{"rootId":"q9fv53kuoptemny","id":"q9fv53kuoptemny"},"id":"enobk1jxpf8shog","previousOperationId":"whetrswcwd0wvzd"}
{"type":"log","timestamp":1705078112438,"level":"warn","message":"Rendering request 5 finished with error in 674 ms","meta":{"rootId":"q9fv53kuoptemny","id":"q9fv53kuoptemny"},"id":"nad0trxf0067gm1","previousOperationId":"whetrswcwd0wvzd"}
{"type":"error","timestamp":1705078112448,"errno":-4078,"code":"ECONNREFUSED","syscall":"connect","address":"::1","port":8000,"statusCode":400,"weak":true,"entity":{"shortid":"fPhkMfgI1u","name":"apps-script","content":"const http = require('http');\n\n\n// call remote http rest api\nasync function fetchApps(token) {\n    const options = {\n        hostname: 'localhost',\n        port: 8000,\n        path: '/api/applications',\n        method: 'GET',\n        headers: {\n            'Authorization': `Bearer ${token}`,\n        }\n    };\n\n    return new Promise((resolve, reject) => {\n        const req = http.request(options, (result) => {\n            let str = '';\n            result.on('data', (b) => str += b);\n            result.on('error', reject);\n            result.on('end', () => {\n                try{\n                    resolve(JSON.parse(str));\n                } catch (parseError){\n                    reject(parseError);\n                }\n            });\n        });\n        req.on('error', (requestError) => {\n            reject(requestError);\n        });\n        req.end();\n    });\n}\n\n// group the data for report\nasync function prepareDataSource(token) {\n    const apps = await fetchApps(token);\n    const appsByUrl = apps.reduce((a, v) => {\n        a[v.URL] = a[v.URL] || []\n        a[v.URL].push(v)\n        return a\n    }, {})\n\n    return Object.keys(appsByUrl).map((app) => {\n        const appsWithUrl = appsByUrl[app]\n\n        const accumulated = {}\n\n        // appsWithUrl.forEach((o) => {\n        //     o.OrderDate = new Date(o.OrderDate);\n        //     const key = o.OrderDate.getFullYear() + '/' + (o.OrderDate.getMonth() + 1);\n        //     accumulated[key] = accumulated[key] || {\n        //         value: 0,\n        //         orderDate: o.OrderDate\n        //     };\n        //     accumulated[key].value++;\n        // });\n\n        return {\n            rows: appsWithUrl,\n            app\n            // accumulated\n        }\n\n    }).slice(0, 2)\n}\n\n// Use the \"beforeRender\" or \"afterRender\" hook\n// to manipulate and control the report generation\nasync function beforeRender (req, res) {\n    const token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiMGQ3ZjlkMDY1NGE4OGY1MTMyOWMwZGZjYWNiZGRiNmY1NzJiNmVhZjhjZTA5MWFhNmQyNDc1NGEwNTMwYWQxYTM0NDAzODc2YWIzNjI5YjMiLCJpYXQiOjE3MDUwNzUwNTMuOTk1NDIxLCJuYmYiOjE3MDUwNzUwNTMuOTk1NDI1LCJleHAiOjE3MzY2OTc0NTMuNTQwNjg0LCJzdWIiOiIyIiwic2NvcGVzIjpbXX0.o2vFrmAjnxr5Quk3qeEYgw6CK7OzXQ3qzOumUSYo1jaav4k-oOmhrbdmvz6_ZI0921V7srq2sAbmxxujbpgtGreqqRkSO4-eH2p86yOWLf5FBoB-5TBjCn1xJMqq2Nuaubb8XbwQCbQ2lSV8LUjseg7RF46Dt6d49TPpINDh_qtzI2q07BZPcLWbmVGUz6bP52LAbeJl_K3DaVE6jJS6b3TikXIAweIMUttE5IMA1zJRT_RB6AkRAkRk79KuGdwWiHROrqE95ZM5h-_T77uqafD6eR0UPR-eZuRWLzAGsDOXL8n56c41kLZtrLfRyUJQ9GXMT2jvmwNX18XyBo8gU6SjgK1lnffUqdAkWYvEvRUZUOgbJjoSh85kuFop1d9M4ShXP8dUDShP31Odk0550fAI1iBLI32BO7r50IbxGoaIBinZN78zCmSkZ0_DxrlApj9nl405HSoM724ZuRRMTAOt1k0TTd1KdGNuo-Q1JkkW7vqtnrMdDbbNThbhkLlivXqSBPPF8RONApBmQMDayQq5HJlQHhyECsnDuR2m1OXoagnSoLVl_UQDHtDRmBah3AnxCj2VB-HdEpqPg5z8JoTbhUfSNfh6XZg1kWUmPlfeq8P8zgdH8P23WtkZUdrmR6CDYKIz1kInicNODvA4FrMGqCPaBkt_ZBpvLKgp5RA';\n    req.data.applications = await fetchApps(token);\n    console.log(req.data.applications);\n}\n"},"property":"content","logged":true,"previousOperationId":"whetrswcwd0wvzd","id":"sfednui8z5g3dxc","stack":"Error: connect ECONNREFUSED ::1:8000\n    at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1555:16)","message":"Error when evaluating custom script /Apps/apps-script\nconnect ECONNREFUSED ::1:8000"}
