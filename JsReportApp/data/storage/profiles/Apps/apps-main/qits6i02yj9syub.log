{"type":"operationStart","subtype":"profile","data":{"_id":"L31CGyaCUPdzyYdl","timestamp":"2024-01-17T18:50:35.352Z","state":"queued","mode":"standard","creationDate":"2024-01-17T18:50:35.356Z","modificationDate":"2024-01-17T18:50:35.356Z","shortid":"IduZ4BQ","$entitySet":"profiles"},"doDiffs":false,"timestamp":1705517435354,"id":"gt50c14k7194yhn","previousOperationId":null,"operationId":"4c23acnzm7aoq3d"}
{"type":"log","level":"info","message":"Render request 8 queued for execution and waiting for available worker","previousOperationId":"4c23acnzm7aoq3d","timestamp":1705517435354,"id":"pvv64h7a02ci2fr"}
{"type":"operationStart","subtype":"render","name":"apps-main","previousOperationId":"4c23acnzm7aoq3d","timestamp":1705517435372,"id":"6vu9xkgozvids2z","previousEventId":"gt50c14k7194yhn","operationId":"wet3iljqiuc4qyu"}
{"type":"log","timestamp":1705517435372,"level":"info","message":"Starting rendering request 8","meta":{"rootId":"qits6i02yj9syub","id":"qits6i02yj9syub"},"id":"zo85epnaniamnko","previousOperationId":"wet3iljqiuc4qyu"}
{"type":"log","timestamp":1705517435372,"level":"info","message":"Rendering template { name: apps-main, recipe: chrome-pdf, engine: handlebars, preview: true }","meta":{"rootId":"qits6i02yj9syub","id":"qits6i02yj9syub"},"id":"jdrztaeo2wenaku","previousOperationId":"wet3iljqiuc4qyu"}
{"type":"log","timestamp":1705517435374,"level":"debug","message":"Data item not defined for this template.","meta":{"rootId":"qits6i02yj9syub","id":"qits6i02yj9syub"},"id":"ujo29mpnaaedmej","previousOperationId":"wet3iljqiuc4qyu"}
{"type":"log","timestamp":1705517435377,"level":"debug","message":"Executing script apps-script (beforeRender)","meta":{"rootId":"qits6i02yj9syub","id":"qits6i02yj9syub"},"id":"50gs4ui4w6su1jg","previousOperationId":"wet3iljqiuc4qyu"}
{"type":"log","timestamp":1705517435400,"level":"warn","message":"Error when processing render request 8\n(because) error when evaluating custom script /Apps/apps-script\nThe \"cb\" argument must be of type function. Received type string ('utf-8')\n\n(sandbox.js line 8:29)\n\n   6 |\n   7 | const rutaArchivoDatos = 'C:\\\\Users\\\\juank\\\\Proyectos\\\\Tecnologias\\\\JsReportApp\\\\data\\\\Apps\\\\apps-data';\n>  8 | const contenidoArchivo = fs.readFile(rutaArchivoDatos,'utf-8');\n     |                             ^\n   9 |\n  10 | let datos;\n  11 | try {\n\n\nTypeError [ERR_INVALID_ARG_TYPE]: The \"cb\" argument must be of type function. Received type string ('utf-8')\n    at maybeCallback (node:fs:189:3)\n    at Object.readFile (node:fs:392:14)\n    at sandbox.js:8:29","meta":{"rootId":"qits6i02yj9syub","id":"qits6i02yj9syub"},"id":"rt6gp6orfjcn20x","previousOperationId":"wet3iljqiuc4qyu"}
{"type":"log","timestamp":1705517435400,"level":"warn","message":"Rendering request 8 finished with error in 48 ms","meta":{"rootId":"qits6i02yj9syub","id":"qits6i02yj9syub"},"id":"o1gb7f9g79bpyib","previousOperationId":"wet3iljqiuc4qyu"}
{"type":"error","timestamp":1705517435407,"code":"ERR_INVALID_ARG_TYPE","statusCode":400,"weak":true,"decoratedSuffix":"\n\n(sandbox.js line 8:29)\n\n   6 |\n   7 | const rutaArchivoDatos = 'C:\\\\Users\\\\juank\\\\Proyectos\\\\Tecnologias\\\\JsReportApp\\\\data\\\\Apps\\\\apps-data';\n>  8 | const contenidoArchivo = fs.readFile(rutaArchivoDatos,'utf-8');\n     |                             ^\n   9 |\n  10 | let datos;\n  11 | try {\n\n","entity":{"shortid":"fPhkMfgI1u","name":"apps-script","content":"const fs = require('fs');\nconst path = require('path');\n\n\n// path.join(__dirname,'\\\\data\\\\Apps\\\\apps-data'\n\nconst rutaArchivoDatos = 'C:\\\\Users\\\\juank\\\\Proyectos\\\\Tecnologias\\\\JsReportApp\\\\data\\\\Apps\\\\apps-data';\nconst contenidoArchivo = fs.readFile(rutaArchivoDatos,'utf-8');\n\nlet datos;\ntry {\n  datos = JSON.parse(contenidoArchivo);\n} catch (error) {\n  console.error('Error al analizar el archivo JSON:', error);\n}\n\nasync function fetchApps(){\n    let datos;\ntry {\n  datos = JSON.parse(contenidoArchivo);\n} catch (error) {\n  console.error('Error al analizar el archivo JSON:', error);\n}\nconsole.log(datos);\n}\n// Use the \"beforeRender\" or \"afterRender\" hook\n// to manipulate and control the report generation\nasync function beforeRender (req, res) {\n    req.data.apps = await fetchApps();\n    console.log(req.data.apps);\n}\n"},"property":"content","logged":true,"previousOperationId":"wet3iljqiuc4qyu","id":"le3ciz3t1x0uwic","stack":"TypeError [ERR_INVALID_ARG_TYPE]: The \"cb\" argument must be of type function. Received type string ('utf-8')\n    at maybeCallback (node:fs:189:3)\n    at Object.readFile (node:fs:392:14)\n    at sandbox.js:8:29","message":"Error when evaluating custom script /Apps/apps-script\nThe \"cb\" argument must be of type function. Received type string ('utf-8')\n\n(sandbox.js line 8:29)\n\n   6 |\n   7 | const rutaArchivoDatos = 'C:\\\\Users\\\\juank\\\\Proyectos\\\\Tecnologias\\\\JsReportApp\\\\data\\\\Apps\\\\apps-data';\n>  8 | const contenidoArchivo = fs.readFile(rutaArchivoDatos,'utf-8');\n     |                             ^\n   9 |\n  10 | let datos;\n  11 | try {\n\n"}
